{"version":3,"file":"static/js/780.d12f61af.chunk.js","mappings":"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","sources":["components/MovieDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Box, Typography, CircularProgress } from \"@mui/material\";\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst MovieDetail = () => {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMovieDetails = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&append_to_response=credits,videos,reviews`\r\n        );\r\n        const data = await response.json();\r\n        setMovie(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching movie details:\", error);\r\n      }\r\n    };\r\n    fetchMovieDetails();\r\n  }, [id]);\r\n\r\n  if (loading) return <CircularProgress />;\r\n\r\n  return (\r\n    <Box sx={{ textAlign: \"center\", mt: 4 }}>\r\n      <Typography variant=\"h3\">{movie.title}</Typography>\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n        alt={movie.title}\r\n        style={{ width: \"300px\", borderRadius: \"10px\", margin: \"20px 0\" }}\r\n      />\r\n      <Typography variant=\"h5\">Overview</Typography>\r\n      <Typography>{movie.overview}</Typography>\r\n      <Typography variant=\"h5\" sx={{ mt: 2 }}>\r\n        Cast\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n          gap: 2,\r\n        }}\r\n      >\r\n        {movie.credits?.cast?.slice(0, 5).map(actor => (\r\n          <Box key={actor.id} sx={{ width: \"120px\", textAlign: \"center\" }}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w185${actor.profile_path}`}\r\n              alt={actor.name}\r\n              style={{ width: \"100%\", borderRadius: \"8px\" }}\r\n            />\r\n            <Typography variant=\"body2\">{actor.name}</Typography>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n      <Typography variant=\"h5\" sx={{ mt: 2 }}>\r\n        Director\r\n      </Typography>\r\n      <Typography>\r\n        {movie.credits?.crew?.find(person => person.job === \"Director\")?.name ||\r\n          \"N/A\"}\r\n      </Typography>\r\n      <Typography variant=\"h5\" sx={{ mt: 2 }}>\r\n        Trailer\r\n      </Typography>\r\n      {movie.videos?.results.length > 0 ? (\r\n        <iframe\r\n          width=\"560\"\r\n          height=\"315\"\r\n          src={`https://www.youtube.com/embed/${movie.videos.results[0].key}`}\r\n          title=\"Movie Trailer\"\r\n          allowFullScreen\r\n          style={{ marginTop: \"10px\" }}\r\n        />\r\n      ) : (\r\n        <Typography>No trailer available</Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n"],"names":["MovieDetail","_movie$credits","_movie$credits$cast","_movie$credits2","_movie$credits2$crew","_movie$credits2$crew$","_movie$videos","id","useParams","movie","setMovie","useState","loading","setLoading","useEffect","async","response","fetch","concat","process","data","json","error","console","fetchMovieDetails","_jsx","CircularProgress","_jsxs","Box","sx","textAlign","mt","children","Typography","variant","title","src","poster_path","alt","style","width","borderRadius","margin","overview","display","flexWrap","justifyContent","gap","credits","cast","slice","map","actor","profile_path","name","crew","find","person","job","videos","results","length","height","key","allowFullScreen","marginTop"],"sourceRoot":""}