{"version":3,"file":"static/js/391.a9842aae.chunk.js","mappings":"gNAKA,MA8EA,EA9EsBA,IAAyC,IAAxC,UAAEC,EAAY,GAAE,eAAEC,GAAgBF,EACvD,MAAOG,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,IACrCC,EAAkB,IAAKL,GAAa,IAAKM,MAAK,CAACC,EAAGC,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAC5D,OAAQV,GACN,IAAK,cACH,OAAQM,EAAEK,cAAgB,IAAMN,EAAEM,cAAgB,GACpD,IAAK,aACH,OAAQN,EAAEM,cAAgB,IAAML,EAAEK,cAAgB,GACpD,IAAK,WACH,OACE,IAAIC,KAAmB,QAAfL,EAACD,EAAEO,oBAAY,IAAAN,EAAAA,EAAI,cAC3B,IAAIK,KAAmB,QAAfJ,EAACH,EAAEQ,oBAAY,IAAAL,EAAAA,EAAI,cAE/B,IAAK,WACH,OACE,IAAII,KAAmB,QAAfH,EAACJ,EAAEQ,oBAAY,IAAAJ,EAAAA,EAAI,cAC3B,IAAIG,KAAmB,QAAfF,EAACJ,EAAEO,oBAAY,IAAAH,EAAAA,EAAI,cAE/B,IAAK,QACH,OAAOL,EAAES,MAAMC,cAAcT,EAAEQ,OACjC,QACE,OAAO,EACX,IAGF,OACEE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,SAAU,IAAKC,GAAI,OAAQC,EAAG,GAAIC,SAAA,EAC3CC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTC,QAAQ,KACRC,UAAU,SACVC,UAAU,aACVT,GAAI,CAAEU,GAAI,EAAGC,GAAI,GAAIP,SACtB,sBAIqB,IAArBxB,EAAUgC,QACTP,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACE,UAAU,SAASK,MAAM,gBAAgBb,GAAI,CAAEU,GAAI,GAAIN,SAAC,4BAIpEN,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAV,SAAA,EACEN,EAAAA,EAAAA,MAACiB,EAAAA,EAAM,CACLC,MAAOlC,EACPmC,SAAUC,GAAKnC,EAAamC,EAAEC,OAAOH,OACrCI,cAAY,EACZC,WAAS,EACTrB,GAAI,CAAEW,GAAI,GAAIP,SAAA,EAEdC,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAACN,MAAM,GAAEZ,SAAC,aACnBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAACN,MAAM,cAAaZ,SAAC,8BAC9BC,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAACN,MAAM,aAAYZ,SAAC,8BAC7BC,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAACN,MAAM,WAAUZ,SAAC,mCAC3BC,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAACN,MAAM,WAAUZ,SAAC,mCAC3BC,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAACN,MAAM,QAAOZ,SAAC,2BAG1BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACwB,QAAQ,OAAOC,SAAS,OAAOC,IAAK,EAAGC,eAAe,SAAQtB,SAChEnB,EAAgB0C,KAAIC,IACnBvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAS,CAERD,MAAOA,EACP/C,eAAgBA,EAChBD,UAAWA,GAHNgD,EAAME,aASjB,C","sources":["components/FavoritesPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Typography, MenuItem, Select } from \"@mui/material\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nconst FavoritesPage = ({ favorites = [], toggleFavorite }) => {\r\n  const [sortOrder, setSortOrder] = useState(\"\");\r\n  const sortedFavorites = [...(favorites || [])].sort((a, b) => {\r\n    switch (sortOrder) {\r\n      case \"rating_high\":\r\n        return (b.vote_average || 0) - (a.vote_average || 0);\r\n      case \"rating_low\":\r\n        return (a.vote_average || 0) - (b.vote_average || 0);\r\n      case \"date_new\":\r\n        return (\r\n          new Date(b.release_date ?? \"1970-01-01\") -\r\n          new Date(a.release_date ?? \"1970-01-01\")\r\n        );\r\n      case \"date_old\":\r\n        return (\r\n          new Date(a.release_date ?? \"1970-01-01\") -\r\n          new Date(b.release_date ?? \"1970-01-01\")\r\n        );\r\n      case \"title\":\r\n        return a.title.localeCompare(b.title);\r\n      default:\r\n        return 0;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 900, mx: \"auto\", p: 3 }}>\r\n      <Typography\r\n        variant=\"h4\"\r\n        textAlign=\"center\"\r\n        className=\"tmdb-title\"\r\n        sx={{ mt: 4, mb: 2 }}\r\n      >\r\n        Check my favorite\r\n      </Typography>\r\n\r\n      {favorites.length === 0 ? (\r\n        <Typography textAlign=\"center\" color=\"textSecondary\" sx={{ mt: 2 }}>\r\n          Add some to favorites!\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          <Select\r\n            value={sortOrder}\r\n            onChange={e => setSortOrder(e.target.value)}\r\n            displayEmpty\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n          >\r\n            <MenuItem value=\"\">Default</MenuItem>\r\n            <MenuItem value=\"rating_high\">Rating (High → Low)</MenuItem>\r\n            <MenuItem value=\"rating_low\">Rating (Low → High)</MenuItem>\r\n            <MenuItem value=\"date_new\">Release Date (New → Old)</MenuItem>\r\n            <MenuItem value=\"date_old\">Release Date (Old → New)</MenuItem>\r\n            <MenuItem value=\"title\">Title (A → Z)</MenuItem>\r\n          </Select>\r\n\r\n          <Box display=\"flex\" flexWrap=\"wrap\" gap={2} justifyContent=\"center\">\r\n            {sortedFavorites.map(movie => (\r\n              <MovieCard\r\n                key={movie.id}\r\n                movie={movie}\r\n                toggleFavorite={toggleFavorite}\r\n                favorites={favorites}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nFavoritesPage.propTypes = {\r\n  favorites: PropTypes.array,\r\n  toggleFavorite: PropTypes.func,\r\n};\r\n\r\nexport default FavoritesPage;\r\n"],"names":["_ref","favorites","toggleFavorite","sortOrder","setSortOrder","useState","sortedFavorites","sort","a","b","_b$release_date","_a$release_date","_a$release_date2","_b$release_date2","vote_average","Date","release_date","title","localeCompare","_jsxs","Box","sx","maxWidth","mx","p","children","_jsx","Typography","variant","textAlign","className","mt","mb","length","color","_Fragment","Select","value","onChange","e","target","displayEmpty","fullWidth","MenuItem","display","flexWrap","gap","justifyContent","map","movie","MovieCard","id"],"sourceRoot":""}